/*
 * Author's name and email: Michael, michaeljava95@gmail.com
 * Program description: Built the book example using visual IDE tools.
 * Latest version: 12:20 AM, 1/17/2021
 * Older versions: 
 */

import java.awt.Font;

public class RadioButtonFrame extends javax.swing.JFrame
{
	private Font plainFont = new Font("Serif", Font.PLAIN, 14); // font for plain text
	private Font boldFont = new Font("Serif", Font.BOLD, 14); // font for bold text
	private Font italicFont = new Font("Serif", Font.ITALIC, 14); // font for italic text
	// font for bold and italic text
	private Font boldItalicFont = new Font("Serif", Font.BOLD + Font.ITALIC, 14); 

	/**
	 * Creates new form RadioButtonFrame
	 */
	public RadioButtonFrame()
	{
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      buttonGroup1 = new javax.swing.ButtonGroup();
      jTextField1 = new javax.swing.JTextField();
      plainRadioButton = new javax.swing.JRadioButton();
      boldRadioButton = new javax.swing.JRadioButton();
      italicRadioButton = new javax.swing.JRadioButton();
      boldItalicRadioButton = new javax.swing.JRadioButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("RadioButton Test");

      jTextField1.setColumns(25);
      jTextField1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
      jTextField1.setText("Watch the font style change");

      buttonGroup1.add(plainRadioButton);
      plainRadioButton.setSelected(true);
      plainRadioButton.setText("Plain");
      plainRadioButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            plainRadioButtonActionPerformed(evt);
         }
      });

      buttonGroup1.add(boldRadioButton);
      boldRadioButton.setText("Bold");
      boldRadioButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            boldRadioButtonActionPerformed(evt);
         }
      });

      buttonGroup1.add(italicRadioButton);
      italicRadioButton.setText("Italic");
      italicRadioButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            italicRadioButtonActionPerformed(evt);
         }
      });

      buttonGroup1.add(boldItalicRadioButton);
      boldItalicRadioButton.setText("Bold/Italic");
      boldItalicRadioButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            boldItalicRadioButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(plainRadioButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(boldRadioButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(italicRadioButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(boldItalicRadioButton)))
            .addContainerGap(20, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(plainRadioButton)
               .addComponent(boldRadioButton)
               .addComponent(italicRadioButton)
               .addComponent(boldItalicRadioButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void plainRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_plainRadioButtonActionPerformed
   {//GEN-HEADEREND:event_plainRadioButtonActionPerformed
		jTextField1.setFont(plainFont);
   }//GEN-LAST:event_plainRadioButtonActionPerformed

   private void boldRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_boldRadioButtonActionPerformed
   {//GEN-HEADEREND:event_boldRadioButtonActionPerformed
		jTextField1.setFont(boldFont);
   }//GEN-LAST:event_boldRadioButtonActionPerformed

   private void italicRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_italicRadioButtonActionPerformed
   {//GEN-HEADEREND:event_italicRadioButtonActionPerformed
		jTextField1.setFont(italicFont);
   }//GEN-LAST:event_italicRadioButtonActionPerformed

   private void boldItalicRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_boldItalicRadioButtonActionPerformed
   {//GEN-HEADEREND:event_boldItalicRadioButtonActionPerformed
		jTextField1.setFont(boldItalicFont);
   }//GEN-LAST:event_boldItalicRadioButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(RadioButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(RadioButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(RadioButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(RadioButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new RadioButtonFrame().setVisible(true);
			}
		});
	}

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JRadioButton boldItalicRadioButton;
   private javax.swing.JRadioButton boldRadioButton;
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.JRadioButton italicRadioButton;
   private javax.swing.JTextField jTextField1;
   private javax.swing.JRadioButton plainRadioButton;
   // End of variables declaration//GEN-END:variables
}
